const nodemailer = require("nodemailer");

/**
 * It creates a transporter object using the nodemailer.createTransport() method, and then sends the
 * email using the transporter object's sendMail() method
 * @param email - The email address of the recipient.
 * @param subject - The subject of the email.
 * @param text - The text of the email.
 */
async function sentEmail(email, subject, text) {
  try {
    /* Creating a transporter object using the nodemailer.createTransport() method. */
    const handler = nodemailer.createTransport({
      host: process.env.HOST,
      port: Number(process.env.EMAIL_PORT),
      secure: Boolean(process.env.SECURE),
      auth: {
        user: process.env.EMAIL_USERNAME,
        pass: process.env.EMAIL_PASSWORD,
      },
    });

    /* Sending the email. */
    await handler.sendMail({
      from: process.env.EMAIL_USERNAME,
      to: email,
      subject: subject,
      text: text,
    });

    console.log("Email Sent Successfully!");
  } catch (error) {
    console.log("Email Not Sent!");
    console.log(error);
  }
}

/**
 * It sends an email to the user with a link to verify their email address.
 * </code>
 * @param email - the email address of the user
 * @param name - name of the user
 * @param id - user id
 * @param token - the token generated by the user
 * @returns The result of the async function is being returned.
 */
async function sendVeri(email, name, id, token) {
  try {
    const url = `Dear ${name},\nVerify your email address \n${process.env.BASE_URL}verify/${id}/${token}`;
    /* Sending an email to the user with a link to verify their email address. */
    const result = await sentEmail(email, "Email Verification", url);

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with a message that their account has been successfully verified.
 * @param email - the email address of the user
 * @param name - The name of the user
 * @returns The result of the await sentEmail() function.
 */
async function sendSuccVeri(email, name) {
  try {
    const message = `Dear ${name},\nCongratulations, your account has been successfully activated.`;
    /* Sending an email to the user with a message that their account has been successfully verified. */
    const result = await sentEmail(email, "Successfully Verified", message);

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with the message "Dear ,\nYour account has been successfully
 * updated."
 * @param email - the email address of the user
 * @param name - The name of the user
 * @returns The result of the sentEmail function.
 */
async function sendSuccUp(email, name) {
  try {
    const message = `Dear ${name},\nYour account has been successfully updated.`;
    /* Sending an email to the user with the message "Dear ,\nYour account has been successfully updated." */
    const result = await sentEmail(email, "Successfully Updated", message);

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with the message that their password has been successfully changed.
 * @param email - The email address of the user
 * @param name - The name of the user
 * @returns The result of the async function.
 */
async function sendSuccChPas(email, name) {
  try {
    const message = `Dear ${name},\nYour account password has been successfully changed.`;
    /* Sending an email to the user with the message that their password has been successfully changed. */
    const result = await sentEmail(
      email,
      "Successfully Password Changed",
      message
    );

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with the subject "Successfully Deleted" and the message "Dear
 * ,\nYour account has been successfully deleted."
 * </code>
 * @param email - the email address of the user
 * @param name - The name of the user
 * @returns The result of the sentEmail function.
 */
async function sendSuccDel(email, name) {
  try {
    const message = `Dear ${name},\nYour account has been successfully deleted.`;
    /* Sending an email to the user with the subject "Successfully Deleted" and the message "Dear ,\nYour
account has been successfully deleted." */
    const result = await sentEmail(email, "Successfully Deleted", message);

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with the message that their account has been updated by admin.
 * </code>
 * @param email - The email address of the recipient.
 * @param name - The name of the user
 * @returns The result of the async function.
 */
async function sendSuccUpAd(email, name) {
  try {
    const message = `Dear ${name},\nYour account has been updated by admin.`;
    /* Sending an email to the user with the message that their account has been updated by admin. */
    const result = await sentEmail(
      email,
      "Successfully Updated By Admin",
      message
    );

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

/**
 * It sends an email to the user with the message that their account has been deleted by admin.
 * @param email - the email address of the user
 * @param name - The name of the user
 * @returns The result of the async function is a promise.
 */
async function sendSuccDelAd(email, name) {
  try {
    const message = `Dear ${name},\nYour account has been deleted by admin.`;
    /* Sending an email to the user with the message that their account has been deleted by admin. */
    const result = await sentEmail(
      email,
      "Successfully Deleted By Admin",
      message
    );

    return result;
  } catch (error) {
    console.error(error);
    return error;
  }
}

module.exports = {
  sentEmail,
  sendVeri,
  sendSuccVeri,
  sendSuccUp,
  sendSuccChPas,
  sendSuccDel,
  sendSuccUpAd,
  sendSuccDelAd,
};
